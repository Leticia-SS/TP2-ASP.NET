@page
@model WebApp_TP2.Pages.CityManager.CreateCityModel
@{
	ViewData["Title"] = "Create City";
}

<section>
	<h1>Formulário das Cidades</h1>
	<form method="post" id="cityForm" novalidate>
		<div class="form-group mb-3">
			<label asp-for="Input.CityName" class="form-label"></label>
			<input asp-for="Input.CityName" class="form-control"
				   aria-describedby="cityNameHelp" />
			<div id="cityNameHelp" class="form-text">
				Informe o nome completo da cidade
			</div>
			<span asp-validation-for="Input.CityName" class="text-danger"></span>
		</div>

		<button type="submit" class="btn btn-primary">Cadastrar</button>
	</form>

	@if (!string.IsNullOrEmpty(Model.SubmittedCityName))
	{
		<div class="alert alert-success mt-4">
			<h4 class="alert-heading">Sucesso!</h4>
			<p>Cidade <strong>@Model.SubmittedCityName</strong> cadastrada com sucesso.</p>
			<form method="post" asp-page-handler="ViewDetails">
				<button type="submit" class="btn btn-info mt-2">
					Ver Detalhes da Cidade
				</button>
			</form>
		</div>
	}

	@section Scripts {
    <partial name="_ValidationScriptsPartial" />
		<script>
			document.addEventListener('DOMContentLoaded', function() {
				const form = document.getElementById('cityForm');
				const inputs = form.querySelectorAll('input[data-val="true"]');

				inputs.forEach(input => {
					input.addEventListener('blur', function() {
						const field = $(this);
						const isValid = field.valid();

						field.toggleClass('is-valid', isValid);
						field.toggleClass('is-invalid', !isValid);
					});
				});
			});
    </script>
	}
</section>
